name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r web_server/ --severity-level high --confidence-level high --format html --output bandit-report.html

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.html

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - static-code-analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/web-monitoring:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/web-monitoring:latest

  deploy-application:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs:
      - build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Deploy Services
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker-compose up -d

  run-tests:
    name: Run Automated Tests
    runs-on: ubuntu-latest
    needs:
      - deploy-application

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: pip install requests

      - name: Run Tests
        run: python tests/test_web_server.py

  validate-observability:
    name: Validate Observability
    runs-on: ubuntu-latest
    needs:
      - deploy-application

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Verify Prometheus Metrics
        run: curl http://localhost:9090/metrics | grep "http_requests_total"

      - name: Verify Grafana is Running
        run: curl -I http://localhost:3000 | grep "200 OK"
